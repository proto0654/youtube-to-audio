import logging
import re
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, CommandObject, ChatMemberUpdatedFilter, IS_MEMBER, IS_NOT_MEMBER
from aiogram.types import ChatMemberUpdated
from aiogram.filters.chat_member_updated import JOIN_TRANSITION, LEAVE_TRANSITION
from aiogram.enums import ChatType

from config import GROUP_MODE_ENABLED, DIRECT_PROCESS_YOUTUBE_LINKS, MAX_REQUESTS_PER_USER
from config import TOPICS_MODE_ENABLED, is_allowed_chat
from keyboards.inline import get_main_keyboard
from services.user_state import user_state_manager
from services.youtube import download_audio_from_youtube, search_youtube_music
from handlers.link_handler import process_youtube_link
from handlers.search import SearchPagination, display_search_results_page

logger = logging.getLogger(__name__)
router = Router()

# –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ YouTube —Å—Å—ã–ª–æ–∫
YOUTUBE_REGEX = r"(?:https?:\/\/)?(?:www\.|m\.)?(?:youtube\.com|youtu\.be)\/(?:watch\?v=)?([^\s&]+)"

@router.message(Command("start"), F.chat.type.in_({ChatType.GROUP, ChatType.SUPERGROUP}))
async def cmd_start_group(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤.
    """
    if not GROUP_MODE_ENABLED:
        return
    
    chat_id = message.chat.id
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    chat_name = message.chat.title
    topic_id = message.message_thread_id if TOPICS_MODE_ENABLED else None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ —ç—Ç–æ—Ç —á–∞—Ç/—Ç–æ–ø–∏–∫
    if not is_allowed_chat(chat_id, topic_id):
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –≤ –≥—Ä—É–ø–ø–µ {chat_name} (ID: {chat_id}, —Ç–æ–ø–∏–∫: {topic_id}) –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        return
    
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –≤ –≥—Ä—É–ø–ø–µ {chat_name} (ID: {chat_id}, —Ç–æ–ø–∏–∫: {topic_id}) –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} ({user_name})")
    
    topic_info = f" –≤ —Ç–æ–ø–∏–∫–µ {topic_id}" if topic_id is not None else ""
    text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∞—É–¥–∏–æ –∏–∑ YouTube.\n\n"
        f"–í –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ{topic_info} —è —Ä–∞–±–æ—Ç–∞—é —Ç–∞–∫:\n"
        f"‚Ä¢ –ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ, –∏ —è —Å–∫–∞—á–∞—é –∏–∑ –Ω–µ–≥–æ –∞—É–¥–∏–æ\n"
        f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /search –¥–ª—è –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏\n"
        f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏"
    )
    
    await message.answer(text)

@router.message(Command("help"), F.chat.type.in_({ChatType.GROUP, ChatType.SUPERGROUP}))
async def cmd_help_group(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤.
    """
    if not GROUP_MODE_ENABLED:
        return
    
    chat_id = message.chat.id
    topic_id = message.message_thread_id if TOPICS_MODE_ENABLED else None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ —ç—Ç–æ—Ç —á–∞—Ç/—Ç–æ–ø–∏–∫
    if not is_allowed_chat(chat_id, topic_id):
        return
    
    topic_info = f" –≤ —Ç–æ–ø–∏–∫–µ {topic_id}" if topic_id is not None else ""
    text = (
        f"üìö <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞{topic_info}:</b>\n\n"
        f"‚Ä¢ <b>/start</b> - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        f"‚Ä¢ <b>/help</b> - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        f"‚Ä¢ <b>/search [–∑–∞–ø—Ä–æ—Å]</b> - –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É\n"
        f"‚Ä¢ <b>/mystate</b> - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à–µ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ\n"
        f"‚Ä¢ <b>/clearstate</b> - –°–±—Ä–æ—Å–∏—Ç—å –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ\n\n"
        f"–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ, –∏ —è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–∞—á–∞—é –∏–∑ –Ω–µ–≥–æ –∞—É–¥–∏–æ."
    )
    
    await message.answer(text)

@router.message(Command("search"), F.chat.type.in_({ChatType.GROUP, ChatType.SUPERGROUP}))
async def cmd_search_group(message: Message, command: CommandObject):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /search –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤.
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞.
    """
    if not GROUP_MODE_ENABLED:
        return
    
    chat_id = message.chat.id
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    topic_id = message.message_thread_id if TOPICS_MODE_ENABLED else None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ —ç—Ç–æ—Ç —á–∞—Ç/—Ç–æ–ø–∏–∫
    if not is_allowed_chat(chat_id, topic_id):
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω–æ –ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã
    if user_state_manager.get_user_requests_count(user_id) >= MAX_REQUESTS_PER_USER:
        await message.reply(
            f"‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ (–º–∞–∫—Å–∏–º—É–º {MAX_REQUESTS_PER_USER} –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —á–∞—Å).\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        return
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫ –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –Ω–µ –±—ã–ª –∑–∞–≤–µ—Ä—à–µ–Ω –≤—ã–±–æ—Ä–æ–º —Ç—Ä–µ–∫–∞
    user_state_manager.set_user_browsing_results(user_id, False, None, chat_id, topic_id)
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –∫–∞–∫ –∑–∞–ø—Ä–æ—Å
    if command.args:
        query = command.args.strip()
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} ({user_name}) –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤ –≥—Ä—É–ø–ø–µ {chat_id} (—Ç–æ–ø–∏–∫: {topic_id}): {query}")
        
        # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞
        if len(query) < 3:
            await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª–∏–Ω–æ–π –Ω–µ –º–µ–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤.")
            return
        
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_state_manager.increment_user_requests(user_id)
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ –ø–æ–∏—Å–∫–∞
        loading_message = await message.reply("üîç –ò—â—É –º—É–∑—ã–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        
        try:
            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –≤ YouTube Music
            results = await search_youtube_music(query, limit=0)
            
            # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ
            await loading_message.delete()
            
            if not results:
                await message.reply(
                    f"üîç –ü–æ –∑–∞–ø—Ä–æ—Å—É <b>{query}</b> –º—É–∑—ã–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n\n"
                    f"–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n"
                    f"‚úì –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å\n"
                    f"‚úì –£–∫–∞–∂–∏—Ç–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞\n"
                    f"‚úì –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞\n"
                    f"‚úì –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è"
                )
                return
            
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
            pagination = SearchPagination(results=results, query=query, page=0)
            user_state_manager.set_user_browsing_results(user_id, True, pagination.__dict__, chat_id, topic_id)
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            await display_search_results_page(message, pagination, is_reply=True)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ –≥—Ä—É–ø–ø–µ: {e}")
            await loading_message.delete()
            await message.reply(
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –º—É–∑—ã–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ YouTube."
            )
    else:
        # –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
        user_state_manager.set_user_waiting_for_query(user_id, True, chat_id, topic_id)
        await message.reply(
            f"{user_name}, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏ –≤ YouTube Music:"
        )

@router.message(Command("mystate"), F.chat.type.in_({ChatType.GROUP, ChatType.SUPERGROUP}))
async def cmd_mystate_group(message: Message):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    if not GROUP_MODE_ENABLED:
        return
    
    chat_id = message.chat.id
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    topic_id = message.message_thread_id if TOPICS_MODE_ENABLED else None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ —ç—Ç–æ—Ç —á–∞—Ç/—Ç–æ–ø–∏–∫
    if not is_allowed_chat(chat_id, topic_id):
        return
    
    waiting_for_query = user_state_manager.is_user_waiting_for_query(user_id, chat_id, topic_id)
    browsing_results = user_state_manager.is_user_browsing_results(user_id, chat_id, topic_id)
    requests_count = user_state_manager.get_user_requests_count(user_id)
    
    topic_info = f" –≤ —Ç–æ–ø–∏–∫–µ {topic_id}" if topic_id is not None else ""
    status_text = (
        f"üîÑ <b>–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è {user_name}{topic_info}:</b>\n\n"
        f"‚Ä¢ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {'‚úÖ' if waiting_for_query else '‚ùå'}\n"
        f"‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞: {'‚úÖ' if browsing_results else '‚ùå'}\n"
        f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {requests_count}/{MAX_REQUESTS_PER_USER} –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å"
    )
    
    await message.reply(status_text)

@router.message(Command("clearstate"), F.chat.type.in_({ChatType.GROUP, ChatType.SUPERGROUP}))
async def cmd_clearstate_group(message: Message):
    """
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    if not GROUP_MODE_ENABLED:
        return
    
    chat_id = message.chat.id
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    topic_id = message.message_thread_id if TOPICS_MODE_ENABLED else None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ —ç—Ç–æ—Ç —á–∞—Ç/—Ç–æ–ø–∏–∫
    if not is_allowed_chat(chat_id, topic_id):
        return
    
    user_state_manager.clear_user_state(user_id, None, chat_id, topic_id)
    logger.info(f"–°–±—Ä–æ—à–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} ({user_name}) –≤ —á–∞—Ç–µ {chat_id} (—Ç–æ–ø–∏–∫: {topic_id})")
    
    topic_info = f" –≤ —Ç–æ–ø–∏–∫–µ {topic_id}" if topic_id is not None else ""
    await message.reply(f"‚úÖ {user_name}, –≤–∞—à–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è{topic_info} —Å–±—Ä–æ—à–µ–Ω—ã.")

@router.message(F.chat.type.in_({ChatType.GROUP, ChatType.SUPERGROUP}))
async def handle_group_message(message: Message):
    """
    –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º.
    """
    if not GROUP_MODE_ENABLED:
        return
    
    chat_id = message.chat.id
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    topic_id = message.message_thread_id if TOPICS_MODE_ENABLED else None
    text = message.text or message.caption or ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ —ç—Ç–æ—Ç —á–∞—Ç/—Ç–æ–ø–∏–∫
    if not is_allowed_chat(chat_id, topic_id):
        return
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–∂–∏–¥–∞–µ—Ç –≤–≤–æ–¥–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    if user_state_manager.is_user_waiting_for_query(user_id, chat_id, topic_id):
        query = text.strip()
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} ({user_name}) –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤ –≥—Ä—É–ø–ø–µ {chat_id} (—Ç–æ–ø–∏–∫: {topic_id}): {query}")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
        user_state_manager.set_user_waiting_for_query(user_id, False, chat_id, topic_id)
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        user_state_manager.set_user_browsing_results(user_id, False, None, chat_id, topic_id)
        
        # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞
        if len(query) < 3:
            await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª–∏–Ω–æ–π –Ω–µ –º–µ–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤.")
            return
        
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_state_manager.increment_user_requests(user_id)
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ –ø–æ–∏—Å–∫–∞
        loading_message = await message.reply("üîç –ò—â—É –º—É–∑—ã–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        
        try:
            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –≤ YouTube Music
            results = await search_youtube_music(query, limit=0)
            
            # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ
            await loading_message.delete()
            
            if not results:
                await message.reply(
                    f"üîç –ü–æ –∑–∞–ø—Ä–æ—Å—É <b>{query}</b> –º—É–∑—ã–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n\n"
                    f"–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n"
                    f"‚úì –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å\n"
                    f"‚úì –£–∫–∞–∂–∏—Ç–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞\n"
                    f"‚úì –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞\n"
                    f"‚úì –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è"
                )
                return
            
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
            pagination = SearchPagination(results=results, query=query, page=0)
            user_state_manager.set_user_browsing_results(user_id, True, pagination.__dict__, chat_id, topic_id)
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            await display_search_results_page(message, pagination, is_reply=True)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ –≥—Ä—É–ø–ø–µ: {e}")
            await loading_message.delete()
            await message.reply(
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –º—É–∑—ã–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ YouTube."
            )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ YouTube —Å—Å—ã–ª–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    youtube_match = re.search(YOUTUBE_REGEX, text)
    if youtube_match and DIRECT_PROCESS_YOUTUBE_LINKS:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω–æ –ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã
        if user_state_manager.get_user_requests_count(user_id) >= MAX_REQUESTS_PER_USER:
            await message.reply(
                f"‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ (–º–∞–∫—Å–∏–º—É–º {MAX_REQUESTS_PER_USER} –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —á–∞—Å).\n"
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
            return
        
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_state_manager.increment_user_requests(user_id)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ YouTube —Å—Å—ã–ª–∫–∏
        url = youtube_match.group(0)
        logger.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ YouTube —Å—Å—ã–ª–∫–∞ –≤ –≥—Ä—É–ø–ø–µ {chat_id} (—Ç–æ–ø–∏–∫: {topic_id}) –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} ({user_name}): {url}")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ YouTube —Å—Å—ã–ª–∫–∏
        # –ü–µ—Ä–µ–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        await process_youtube_link(message, is_group_chat=True, topic_id=topic_id)
        
        return

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –±–æ—Ç–∞ –∫ –≥—Ä—É–ø–ø–µ
@router.my_chat_member(ChatMemberUpdatedFilter(member_status_changed=JOIN_TRANSITION))
async def bot_added_to_group(event: ChatMemberUpdated):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É.
    """
    if not GROUP_MODE_ENABLED:
        return
    
    if event.chat.type in {ChatType.GROUP, ChatType.SUPERGROUP}:
        chat_id = event.chat.id
        chat_name = event.chat.title
        added_by = event.from_user.full_name
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω–∞ –ª–∏ —ç—Ç–∞ –≥—Ä—É–ø–ø–∞
        if not is_allowed_chat(chat_id):
            logger.info(f"–ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –Ω–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—É—é –≥—Ä—É–ø–ø—É {chat_name} (ID: {chat_id}) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {added_by}. –î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω.")
            return
        
        logger.info(f"–ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É {chat_name} (ID: {chat_id}) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {added_by}")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ –≥—Ä—É–ø–ø–∞ —Ç–æ–ø–∏–∫–∏
        supports_topics = hasattr(event.chat, 'is_forum') and event.chat.is_forum
        topic_info = ""
        if supports_topics and TOPICS_MODE_ENABLED:
            topic_info = "\n\n–≠—Ç–∞ –≥—Ä—É–ø–ø–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ø–∏–∫–∏. –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ–Ω—è –≤ —Ä–∞–∑–Ω—ã—Ö —Ç–æ–ø–∏–∫–∞—Ö!"
        
        await event.chat.send_message(
            f"üëã –ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º –≤ –≥—Ä—É–ø–ø–µ <b>{chat_name}</b>!\n\n"
            f"–Ø –±–æ—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∞—É–¥–∏–æ –∏–∑ YouTube. –¢–µ–ø–µ—Ä—å —è –±—É–¥—É —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ.\n\n"
            f"–í—ã –º–æ–∂–µ—Ç–µ:\n"
            f"‚Ä¢ –ü—Ä–∏—Å–ª–∞—Ç—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ, –∏ —è —Å–∫–∞—á–∞—é –∏–∑ –Ω–µ–≥–æ –∞—É–¥–∏–æ\n"
            f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /search –¥–ª—è –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏\n"
            f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏{topic_info}\n\n"
            f"–†–∞–¥ –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º! üéµ"
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –±–æ—Ç–∞ –∏–∑ –≥—Ä—É–ø–ø—ã
@router.my_chat_member(ChatMemberUpdatedFilter(member_status_changed=LEAVE_TRANSITION))
async def bot_removed_from_group(event: ChatMemberUpdated):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –±–æ—Ç–∞ –∏–∑ –≥—Ä—É–ø–ø—ã.
    """
    if event.chat.type in {ChatType.GROUP, ChatType.SUPERGROUP}:
        chat_id = event.chat.id
        chat_name = event.chat.title
        removed_by = event.from_user.full_name
        logger.info(f"–ë–æ—Ç —É–¥–∞–ª–µ–Ω –∏–∑ –≥—Ä—É–ø–ø—ã {chat_name} (ID: {chat_id}) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {removed_by}")
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —ç—Ç–æ–π –≥—Ä—É–ø–ø–æ–π 